import graph_detector as gd
from graph_detector import *

from utils.utils import cal_roc,savefig
import datetime

res = [] 
maxs = {1:0.81081,2:0.81481,3:0.85686,4:0.9079,5:0.9049,6:0.9069,7:0.9159}
for i,v in maxs.items():
     #gd.hid_units = [8]*i
     #gd.n_heads = [8]*i
     gd.acc = v
     gd.n_heads = [i]
     gd.n_heads.append(1)
     gd.save_path = 'model/graph_detector/'+str(gd.withmatmul)+'_'+str(gd.withattention)+'_label_1'+'_head_'+ str(i) +'/'
     #pred,label,acc = predict()
     #print(pred,label,acc)
     #fpr,tpr,roc_auc = cal_roc(pred, label)
     #label = 'hide_units: %d' % i
     #res.append([fpr,tpr,roc_auc,label])
     oldtime=datetime.datetime.now()
     train()
     newtime=datetime.datetime.now()
     print('%s microseconds'%(newtime-oldtime).seconds)

savefig(res,0)
savefig(res,1)
savefig(res,'micro')
